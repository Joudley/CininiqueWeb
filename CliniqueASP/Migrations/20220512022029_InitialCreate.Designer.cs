// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clinique.Migrations
{
    [DbContext(typeof(GHContext))]
    [Migration("20220512022029_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("ConsultationDossierPatient", b =>
                {
                    b.Property<int>("ConsultationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DossierPatientCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("ConsultationId", "DossierPatientCode");

                    b.HasIndex("DossierPatientCode");

                    b.ToTable("ConsultationDossierPatient");
                });

            modelBuilder.Entity("Hopital.Model.Consultation", b =>
                {
                    b.Property<int>("ConsultationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodePatient")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ConsultationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Diagnostique")
                        .HasColumnType("TEXT");

                    b.Property<int>("Hauteur")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MedecinId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Poids")
                        .HasColumnType("REAL");

                    b.HasKey("ConsultationId");

                    b.HasIndex("MedecinId");

                    b.ToTable("Consultation");
                });

            modelBuilder.Entity("Hopital.Model.DossierPatient", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ConsultationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sexe")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.HasKey("Code");

                    b.ToTable("DossierPatient");
                });

            modelBuilder.Entity("Hopital.Model.Medecin", b =>
                {
                    b.Property<int>("MedecinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sexe")
                        .HasColumnType("TEXT");

                    b.Property<string>("Specialite")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.HasKey("MedecinId");

                    b.ToTable("Medecin");
                });

            modelBuilder.Entity("Hopital.Model.Prescription", b =>
                {
                    b.Property<int>("PrescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConsultationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Prescrire")
                        .HasColumnType("INTEGER");

                    b.HasKey("PrescriptionId");

                    b.HasIndex("ConsultationId");

                    b.ToTable("Prescription");
                });

            modelBuilder.Entity("ConsultationDossierPatient", b =>
                {
                    b.HasOne("Hopital.Model.Consultation", null)
                        .WithMany()
                        .HasForeignKey("ConsultationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hopital.Model.DossierPatient", null)
                        .WithMany()
                        .HasForeignKey("DossierPatientCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hopital.Model.Consultation", b =>
                {
                    b.HasOne("Hopital.Model.Medecin", "Medecin")
                        .WithMany("Consultation")
                        .HasForeignKey("MedecinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medecin");
                });

            modelBuilder.Entity("Hopital.Model.Prescription", b =>
                {
                    b.HasOne("Hopital.Model.Consultation", "Consultation")
                        .WithMany("Prescription")
                        .HasForeignKey("ConsultationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consultation");
                });

            modelBuilder.Entity("Hopital.Model.Consultation", b =>
                {
                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("Hopital.Model.Medecin", b =>
                {
                    b.Navigation("Consultation");
                });
#pragma warning restore 612, 618
        }
    }
}
